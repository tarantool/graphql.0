language: c

sudo: required

services:
  - docker

cache:
    directories:
      - $HOME/.cache

git:
    depth: 100500

jobs:
  include:
    - name: "Upload API documentation"
      env: TARGET=doc
      if: repo = "tarantool/graphql" AND branch = master AND type = push
    - name: "CentOS 6: test, deploy RPM"
      env: TARGET=pack OS=el DIST=6
    - name: "CentOS 7: test, deploy RPM"
      env: TARGET=pack OS=el DIST=7
    - name: "Fedora 26: test, deploy RPM"
      env: TARGET=pack OS=fedora DIST=26
    - name: "Fedora 27: test, deploy RPM"
      env: TARGET=pack OS=fedora DIST=27
    - name: "Test: shard 1.2, avro-schema 3.0.1"
      env: TARGET=test SHARD_VERSION=1.2 AVRO_SCHEMA=3.0.1
    - name: "Test: shard 2.1, avro-schema 3.0.1"
      env: TARGET=test SHARD_VERSION=2.1 AVRO_SCHEMA=3.0.1
    - name: "Test: shard master, avro-schema master"
      env: TARGET=test SHARD_VERSION= AVRO_SCHEMA=
    - name: "Coverage: shard 2.1, avro-schema 3.0.1"
      env: TARGET=coverage SHARD_VERSION=2.1 AVRO_SCHEMA=3.0.1

script:
  - git describe --long
  - git submodule update --recursive --init
  - |
    if [ "${TARGET}" = coverage ]; then
        ./tools/ubuntu.trusty.prepare.sh
        export PATH="${PATH}:$(realpath .)/.rocks/bin"
        make coverage
        if [ -n "${COVERALLS_TOKEN}" ]; then
            luacov-coveralls --include ^graphql --repo-token "${COVERALLS_TOKEN}"
        else
            echo "Skipped uploading to coveralls.io: no token."
            echo "It is the normal behaviour for a pull request coming from"
            echo "another repository."
        fi
    elif [ "${TARGET}" = pack ]; then
        [ -n "${OS}" ] || exit 1
        [ -n "${DIST}" ] || exit 1
        ./3rd_party/packpack/packpack
    elif [ "${TARGET}" = test ]; then
        ./tools/ubuntu.trusty.prepare.sh
        make test
    elif [ "${TARGET}" = doc ]; then
        ./tools/ubuntu.trusty.prepare.sh
        ./tools/upload_apidoc.sh
    else
        exit 1
    fi

before_deploy:
  - ls -l build/

deploy:
  # Deploy packages to PackageCloud
  - provider: packagecloud
    username: ${PACKAGECLOUD_USER}
    repository: "1_9"
    token: ${PACKAGECLOUD_TOKEN}
    dist: ${OS}/${DIST}
    package_glob: build/*.{rpm,deb}
    skip_cleanup: true
    on:
      branch: master
      condition: -n "${OS}" && x"${TRAVIS_EVENT_TYPE}" != x"cron"
  - provider: packagecloud
    username: ${PACKAGECLOUD_USER}
    repository: "1_10"
    token: ${PACKAGECLOUD_TOKEN}
    dist: ${OS}/${DIST}
    package_glob: build/*.{rpm,deb}
    skip_cleanup: true
    on:
      branch: master
      condition: -n "${OS}" && x"${TRAVIS_EVENT_TYPE}" != x"cron"
  - provider: packagecloud
    username: ${PACKAGECLOUD_USER}
    repository: "2x"
    token: ${PACKAGECLOUD_TOKEN}
    dist: ${OS}/${DIST}
    package_glob: build/*.{rpm,deb}
    skip_cleanup: true
    on:
      branch: master
      condition: -n "${OS}" && x"${TRAVIS_EVENT_TYPE}" != x"cron"

notifications:
  email:
    recipients:
      - build@tarantool.org
    on_success: change
    on_failure: always
